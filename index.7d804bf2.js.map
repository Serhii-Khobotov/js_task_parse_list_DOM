{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCMA,IAAM,EAAe,SAAC,CAAtB,EACE,IAAM,EAAS,EAAE,CAEZ,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAoB,CAApB,IAAM,EAAN,EAAA,KAAA,CACG,EAAS,EAAK,YAAY,CAAC,eAC3B,EAAW,EAAK,YAAY,CAAC,iBAC7B,EAAM,EAAK,YAAY,CAAC,YACxB,EAAS,EAAK,WAAW,CAAC,IAAI,GAEpC,EAAO,IAAI,CAAC,CACV,OAAA,EACA,SAAA,EACA,OAfG,CAAC,AAeoB,EAff,OAAO,CAAC,IAAK,IAAI,KAAK,CAAC,GAgBhC,IAAA,CACF,EACF,C,C,M,E,CAZK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAcL,OAAO,CACT,EAEM,EAAW,SAAC,CAAlB,EACE,IAAM,EAAK,SAAS,aAAa,CAAC,MAIlC,OAFA,EAAG,WAAW,CAAG,EAEV,CACT,GAqBA,AAnBiB,WACf,IAAM,EAAO,SAAS,aAAa,CAAC,MAG9B,EAAkB,AADN,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EADA,EAAK,QAAQ,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,KAEG,IAAI,CAAC,SAAC,CAAA,CAAG,CAA3C,EAAiD,OAAA,EAAE,MAAM,CAAG,EAAE,MAAM,A,EAEpE,CAAA,EAAK,SAAS,CAAG,GAEZ,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,I,EAAK,EAAA,EAAmB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAnB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAoC,CAApC,IAAM,EAAN,EAAA,KAAA,CACG,EAAK,EAAS,EAAU,MAAM,EAEpC,EAAG,YAAY,CAAC,cAAgB,IAAqC,MAAA,CAAlC,EAAU,MAAM,CAAC,cAAc,KAClE,EAAG,YAAY,CAAC,gBAAiB,EAAU,QAAQ,EACnD,EAAG,YAAY,CAAC,WAAY,EAAU,GAAG,EAEzC,EAAK,MAAM,CAAC,EACd,C,C,M,E,CARK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CASP","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar convertToNumber = function(data) {\n    return +data.replace(\",\", \"\").slice(1);\n};\nvar getEmployees = function(list) {\n    var result = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var item = _step.value;\n            var salary = item.getAttribute(\"data-salary\");\n            var position = item.getAttribute(\"data-position\");\n            var age = item.getAttribute(\"data-age\");\n            var person = item.textContent.trim();\n            result.push({\n                person: person,\n                position: position,\n                salary: convertToNumber(salary),\n                age: age\n            });\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return result;\n};\nvar ListItem = function(text) {\n    var li = document.createElement(\"li\");\n    li.textContent = text;\n    return li;\n};\nvar sortList = function() {\n    var list = document.querySelector(\"ul\");\n    var items = _to_consumable_array(list.children);\n    var employees = getEmployees(items);\n    var sortedEmployees = employees.sort(function(a, b) {\n        return b.salary - a.salary;\n    });\n    list.innerHTML = \"\";\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = sortedEmployees[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var employeer = _step.value;\n            var li = ListItem(employeer.person);\n            li.setAttribute(\"data-salary\", \"$\".concat(employeer.salary.toLocaleString()));\n            li.setAttribute(\"data-position\", employeer.position);\n            li.setAttribute(\"data-age\", employeer.age);\n            list.append(li);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n};\nsortList();\n\n//# sourceMappingURL=index.7d804bf2.js.map\n","'use strict';\n\nconst convertToNumber = (data) => {\n  return +data.replace(',', '').slice(1);\n};\n\nconst getEmployees = (list) => {\n  const result = [];\n\n  for (const item of list) {\n    const salary = item.getAttribute('data-salary');\n    const position = item.getAttribute('data-position');\n    const age = item.getAttribute('data-age');\n    const person = item.textContent.trim();\n\n    result.push({\n      person,\n      position,\n      salary: convertToNumber(salary),\n      age,\n    });\n  }\n\n  return result;\n};\n\nconst ListItem = (text) => {\n  const li = document.createElement('li');\n\n  li.textContent = text;\n\n  return li;\n};\n\nconst sortList = () => {\n  const list = document.querySelector('ul');\n  const items = [...list.children];\n  const employees = getEmployees(items);\n  const sortedEmployees = employees.sort((a, b) => b.salary - a.salary);\n\n  list.innerHTML = '';\n\n  for (const employeer of sortedEmployees) {\n    const li = ListItem(employeer.person);\n\n    li.setAttribute('data-salary', `$${employeer.salary.toLocaleString()}`);\n    li.setAttribute('data-position', employeer.position);\n    li.setAttribute('data-age', employeer.age);\n\n    list.append(li);\n  }\n};\n\nsortList();\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","getEmployees","list","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","salary","getAttribute","position","age","person","textContent","trim","push","data","replace","slice","err","return","ListItem","text","li","document","createElement","sortList","querySelector","sortedEmployees","employees","_array_without_holes","isArray","children","_iterable_to_array","iter","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","constructor","name","test","_non_iterable_spread","TypeError","sort","a","b","innerHTML","employeer","setAttribute","concat","toLocaleString","append"],"version":3,"file":"index.7d804bf2.js.map"}